{"version":3,"sources":["components/commonComponent.jsx","components/indianFlag.png","components/bodyComponent.jsx","apiCalls/covid19trackerApi.js","components/Footer.jsx","components/headerComponent.jsx","components/FormComponent/styles.jsx","apiCalls/Firebase/firebase.js","apiCalls/Firebase/databaseDriver.js","components/FormComponent/uploadedData.jsx","components/FormComponent/form.jsx","App.js","index.js"],"names":["renderText","type","label","color","rest","Typography","variant","renderInputField","name","data","errors","onChange","TextField","size","fullWidth","value","error","helperText","renderSelect","options","select","map","item","MenuItem","key","AlertDialog","initialState","title","content","action","handleClose","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogActions","BodyComponent","useState","fetched","setfetcheds","graphFeched","setGraphFeched","globalCases","setGlobalcases","setTotalCases","indianCase","setIndianCase","useEffect","axios","get","then","Global","NewConfirmed","TotalConfirmed","NewRecovered","TotalRecovered","NewDeaths","TotalDeaths","cases_time_series","forEach","i","DATE","Date","date","currentMonth","getMonth","currentYear","getFullYear","dailyconfirmed","IndianCase","Object","keys","renderGraph","labels","bgColor","blue","borderColor","Box","mt","mr","ml","Grid","container","spacing","xs","sm","gutterBottom","style","entries","length","index","Color","Card","raised","CardContent","background","paddingRight","component","align","renderDisplayCard","start","end","duration","green","red","height","width","display","flexDirection","justifyContent","alignItems","CircularProgress","p","src","indianFlag","alt","blueGrey","lineHeight","ctx","document","getElementById","getContext","Chart","datasets","backgroundColor","borderWidth","scales","yAxes","gridLines","ticks","beginAtZero","callback","dataOfLabels","xAxes","responsive","maintainAspectRatio","Footer","href","target","HeaderComponent","AppBar","position","indigo","Toolbar","IconButton","edge","aria-label","to","textDecoration","Button","Link","startIcon","marginLeft","formStyles","formContainer","flexFlow","form","padding","minHeight","marginTop","formTitle","textAlign","margin","uploadDataRoot","maxHeight","overflowY","cardData","marginBottom","textTransform","deletebutton","top","right","dataDisplay","orange","firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","collectionName","useStyles","makeStyles","UploadedData","users","setFetched","classes","currentId","setCurrentId","setOpen","DialogContent","fontSize","className","onClick","marginRight","collection","doc","delete","toast","success","autoFocus","firstName","lastName","email","gender","suggession","FormComponent","setData","setErrors","Fetched","uploadedData","setUploadedData","handleOnChange","array","querySnapshot","push","GetFirebaseData","onSubmit","e","preventDefault","add","AddData","dataSet","console","log","fx_RunOnUpdata","onSnapshot","realTimeData","getSnapUpdate","Paper","mb","pt","MainComponentDisplay","FormMainComponent","Routes","exact","path","render","App","ReactDOM"],"mappings":"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","file":"static/js/main.3fdc6fe0.chunk.js","sourcesContent":["import {\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Button,\r\n  MenuItem,\r\n  TextField,\r\n  Typography,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\n\r\nexport const renderDisplayCard = ({ key, value, index, Color }) => (\r\n  <Grid item xs={6} sm={3} key={index}>\r\n    <Card raised={true}>\r\n      <CardContent>\r\n        <Grid container>\r\n          <Grid\r\n            item\r\n            xs='auto'\r\n            style={{ background: Color, paddingRight: \"5px\" }}></Grid>\r\n          <Grid item xs={11}>\r\n            <Typography\r\n              variant='body1'\r\n              component='h6'\r\n              align='center'\r\n              color='textSecondary'\r\n              gutterBottom={true}>\r\n              {key}\r\n            </Typography>\r\n            <Typography\r\n              variant='h5'\r\n              component='h5'\r\n              align='center'\r\n              style={{ color: Color }}>\r\n              {value}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  </Grid>\r\n);\r\n\r\nexport const renderText = ({ type, label, color, ...rest }) => (\r\n  <Typography variant={type} color={color} {...rest}>\r\n    {label}\r\n  </Typography>\r\n);\r\n\r\nexport const renderInputField = ({\r\n  name,\r\n  label,\r\n  type,\r\n  data,\r\n  errors,\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <TextField\r\n      label={label}\r\n      type={type ? type : \"text\"}\r\n      variant='outlined'\r\n      color='primary'\r\n      size='small'\r\n      fullWidth={true}\r\n      name={name}\r\n      value={data[name]}\r\n      error={errors[name] ? true : false}\r\n      helperText={errors[name] ? errors[name] : \"\"}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport const renderSelect = ({\r\n  name,\r\n  label,\r\n  options,\r\n  data,\r\n  errors,\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <TextField\r\n      select\r\n      label={label}\r\n      variant='outlined'\r\n      color='primary'\r\n      size='small'\r\n      fullWidth={true}\r\n      name={name}\r\n      value={data[name]}\r\n      error={errors[name] ? true : false}\r\n      helperText={errors[name] ? errors[name] : \"\"}\r\n      onChange={onChange}>\r\n      {options.map((item) => (\r\n        <MenuItem key={item.value} value={item.value}>\r\n          {item.key}\r\n        </MenuItem>\r\n      ))}\r\n    </TextField>\r\n  );\r\n};\r\n\r\nexport const renderButton = ({ label, variant, color, fullWidth, onClick }) => (\r\n  <Button\r\n    variant={variant ? variant : \"outlined\"}\r\n    color={color ? color : \"primary\"}\r\n    fullWidth={fullWidth ? fullWidth : false}\r\n    onClick={onClick}>\r\n    {label}\r\n  </Button>\r\n);\r\n\r\nexport const AlertDialog = ({\r\n  initialState,\r\n  title,\r\n  content,\r\n  action,\r\n  handleClose,\r\n}) => (\r\n  <Dialog\r\n    open={initialState}\r\n    onClose={handleClose}\r\n    aria-labelledby={`${title}-title`}\r\n    aria-describedby={`${title}-description`}>\r\n    <DialogTitle id={title}>{title}</DialogTitle>\r\n    <DialogContent>{content}</DialogContent>\r\n    <DialogActions>{action}</DialogActions>\r\n  </Dialog>\r\n);\r\n","export default __webpack_public_path__ + \"static/media/indianFlag.7c92a5aa.png\";","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CircularProgress,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { blue, blueGrey, green, red } from \"@material-ui/core/colors\";\r\nimport {\r\n  GetGlobalSummary,\r\n  GetRegionalSummary,\r\n} from \"../apiCalls/covid19trackerApi\";\r\nimport { renderDisplayCard } from \"./commonComponent\";\r\nimport CountUp from \"react-countup\";\r\nimport indianFlag from \"./indianFlag.png\";\r\nimport Chart from \"chart.js\";\r\n\r\nexport default function BodyComponent() {\r\n  const [fetched, setfetcheds] = useState(false);\r\n  const [graphFeched, setGraphFeched] = useState(false);\r\n  const [globalCases, setGlobalcases] = useState({});\r\n  const [totalCases, setTotalCases] = useState({});\r\n  const [indianCase, setIndianCase] = useState([]);\r\n\r\n  useEffect(\r\n    () =>\r\n      !fetched &&\r\n      GetGlobalSummary().then(({ data: { Global } }) => {\r\n        setGlobalcases({\r\n          \"New Cases\": Global.NewConfirmed,\r\n          \"Total Cases\": Global.TotalConfirmed,\r\n          \"New Recovery\": Global.NewRecovered,\r\n          \"Total Recovery\": Global.TotalRecovered,\r\n          \"New Deaths\": Global.NewDeaths,\r\n          \"Total Deaths\": Global.TotalDeaths,\r\n        });\r\n        setfetcheds(true);\r\n      })\r\n  );\r\n\r\n  //useeffect for graph\r\n  useEffect(() => {\r\n    !graphFeched &&\r\n      GetRegionalSummary().then(({ data: { cases_time_series } }) => {\r\n        const data = {};\r\n\r\n        cases_time_series.forEach((item, i) => {\r\n          const DATE = new Date(item.date);\r\n          const currentMonth = DATE.getMonth();\r\n          const currentYear = DATE.getFullYear();\r\n\r\n          if (!data[currentYear]) {\r\n            data[currentYear] = {};\r\n          }\r\n          if (!data[currentYear][currentMonth]) {\r\n            data[currentYear][currentMonth] = +item.dailyconfirmed;\r\n          } else {\r\n            data[currentYear][currentMonth] += +item.dailyconfirmed;\r\n          }\r\n        });\r\n        setTotalCases(data);\r\n        const IndianCase = Object.keys(data[\"2021\"]).map((item, i) => {\r\n          return data[\"2021\"][item];\r\n        });\r\n        setIndianCase(IndianCase);\r\n        setGraphFeched(true);\r\n      });\r\n    renderGraph({\r\n      labels: [\r\n        \"jan\",\r\n        \"feb\",\r\n        \"mar\",\r\n        \"apr\",\r\n        \"may\",\r\n        \"jun\",\r\n        \"jul\",\r\n        \"aug\",\r\n        \"sep\",\r\n        \"oct\",\r\n        \"nov\",\r\n        \"dec\",\r\n      ],\r\n      title: \"Covid cases\",\r\n      data: indianCase,\r\n      bgColor: blue[200],\r\n      borderColor: blue[800],\r\n    });\r\n  });\r\n\r\n  return (\r\n    <Box mt={2} mr={2} ml={2}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12} sm={12}>\r\n          <Typography\r\n            variant='h6'\r\n            gutterBottom={true}\r\n            style={{ color: blue[700] }}>\r\n            Global Status\r\n          </Typography>\r\n        </Grid>\r\n        {!Object.entries(globalCases).length ? (\r\n          <Box\r\n            style={{\r\n              height: \"200px\",\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}>\r\n            <Typography variant='body1' color='textSecondary' align='center'>\r\n              Loading Global state ...\r\n            </Typography>\r\n            <br />\r\n            <CircularProgress color='secondary' />\r\n          </Box>\r\n        ) : (\r\n          Object.entries(globalCases).map((item, i) =>\r\n            renderDisplayCard({\r\n              key: item[0],\r\n              value: <CountUp start={0} end={item[1]} duration={2} />,\r\n              index: i,\r\n              Color:\r\n                item[0] === \"New Cases\"\r\n                  ? blue[500]\r\n                  : item[0] === \"Total Cases\"\r\n                  ? blue[500]\r\n                  : item[0] === \"New Recovery\"\r\n                  ? green[500]\r\n                  : item[0] === \"Total Recovery\"\r\n                  ? green[500]\r\n                  : red[500],\r\n            })\r\n          )\r\n        )}\r\n      </Grid>\r\n      {/* graph grid / */}\r\n      <Box mt={4}>\r\n        <Grid container>\r\n          <Grid item xs={12} sm={12}>\r\n            <Typography\r\n              variant='h6'\r\n              gutterBottom={true}\r\n              style={{ color: blue[700] }}>\r\n              Regional Status\r\n            </Typography>\r\n          </Grid>\r\n          {/* //graph card  */}\r\n          <Grid item xs={12} sm={12}>\r\n            <Card>\r\n              <Box p={(1, 1)} style={{ display: \"flex\" }}>\r\n                <img\r\n                  src={indianFlag}\r\n                  alt={\"Indian flag\"}\r\n                  style={{ width: \"40px\", height: \"auto\" }}\r\n                />\r\n                <Typography\r\n                  variant='body1'\r\n                  component='h6'\r\n                  style={{\r\n                    color: blueGrey[700],\r\n                    lineHeight: \"50px\",\r\n                  }}>\r\n                  India\r\n                </Typography>\r\n              </Box>\r\n              <CardContent>\r\n                <canvas id='myChart' width='100%' height='400'></canvas>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport const renderGraph = ({ labels, title, data, bgColor, borderColor }) => {\r\n  let ctx = document.getElementById(\"myChart\").getContext(\"2d\");\r\n  let myChart = new Chart(ctx, {\r\n    type: \"line\",\r\n    data: {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: title,\r\n          data: data,\r\n          backgroundColor: bgColor,\r\n          borderColor: borderColor,\r\n          borderWidth: 3,\r\n        },\r\n      ],\r\n    },\r\n    options: {\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            gridLines: {\r\n              color: \"rgba(0, 0, 0, 0)\",\r\n            },\r\n            ticks: {\r\n              beginAtZero: true,\r\n              callback: function (label, index, dataOfLabels) {\r\n                return label / 1000000 + \"m\";\r\n              },\r\n            },\r\n          },\r\n        ],\r\n        xAxes: [\r\n          {\r\n            gridLines: {\r\n              color: \"rgba(0, 0, 0, 0)\",\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n    },\r\n  });\r\n  return myChart;\r\n};\r\n","import axios from \"axios\";\r\n\r\n// axios.get()\r\n// axios.post()\r\n// axios.update()\r\n// axios.delete()\r\n\r\nexport const GetGlobalSummary = () => {\r\n  return axios.get(\"https://api.covid19api.com/summary\");\r\n};\r\nexport const GetRegionalSummary = () => {\r\n  return axios.get(\"https://api.covid19india.org/data.json\");\r\n};\r\n","import { Typography } from \"@material-ui/core\";\r\nimport { Grid, Box } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12} style={{ backgroundColor: \"#efefef\" }}>\r\n        <Box p={2}>\r\n          <Typography\r\n            variant='body1'\r\n            component='h6'\r\n            color='textSecondary'\r\n            align='center'>\r\n            Created with <FavoriteIcon color='secondary' /> All right Reserved{\" \"}\r\n            <a href='http://www.manit.ac.in' target='blank'>\r\n              @MANIT\r\n            </a>\r\n          </Typography>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  IconButton,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { indigo } from \"@material-ui/core/colors\";\r\nimport BubbleChartOutlinedIcon from \"@material-ui/icons/BubbleChartOutlined\";\r\nimport RssFeedIcon from \"@material-ui/icons/RssFeed\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function HeaderComponent() {\r\n  return (\r\n    <AppBar position='static' style={{ background: indigo[\"A400\"] }}>\r\n      <Toolbar>\r\n        <IconButton edge='start' color='inherit' aria-label='menu'>\r\n          <BubbleChartOutlinedIcon />\r\n        </IconButton>\r\n        <Typography variant='h6'>\r\n          <Link to='/' style={{ textDecoration: \"none\", color: \"white\" }}>\r\n            Covid19 Tracker\r\n          </Link>\r\n        </Typography>\r\n\r\n        <Button\r\n          component={Link}\r\n          to='/feedback_and_grievance'\r\n          variant='outlined'\r\n          color='default'\r\n          startIcon={<RssFeedIcon />}\r\n          style={{\r\n            color: \"white\",\r\n            borderColor: \"white\",\r\n            textDecoration: \"none\",\r\n            marginLeft: \"auto\",\r\n          }}>\r\n          Feedback And Grievance\r\n        </Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import { orange } from \"@material-ui/core/colors\";\r\nimport { blueGrey } from \"@material-ui/core/colors\";\r\n\r\nexport const formStyles = {\r\n  formContainer: {\r\n    display: \"flex\",\r\n    flexFlow: \"row Wrap\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"88vh\",\r\n  },\r\n\r\n  form: {\r\n    padding: \"10px\",\r\n    minHeight: \"350px\",\r\n    height: \"auto\",\r\n    marginTop: \"65px\",\r\n  },\r\n  formTitle: {\r\n    color: blueGrey[700],\r\n    textAlign: \"center\",\r\n    margin: \"10px 0px 30px 0px\",\r\n  },\r\n\r\n  //uploadded data style\r\n  uploadDataRoot: {\r\n    padding: \"16px\",\r\n    minHeight: \"327px\",\r\n    maxHeight: \"327px\",\r\n    overflowY: \"auto\",\r\n  },\r\n  cardData: {\r\n    position: \"relative\",\r\n    marginBottom: \"8px\",\r\n    textTransform: \"capitalize\",\r\n  },\r\n  deletebutton: {\r\n    position: \"absolute\",\r\n    top: \"0px \",\r\n    right: \"0px\",\r\n  },\r\n\r\n  dataDisplay: {\r\n    width: \"100%\",\r\n    backgroundColor: orange[500],\r\n    color: \"white\",\r\n  },\r\n};\r\n","import firebase from \"firebase\";\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCp8sgkqVNQHDWSp3en5Jmm-DX-6ygHfTc\",\r\n  authDomain: \"reactcrudapp007.firebaseapp.com\",\r\n  projectId: \"reactcrudapp007\",\r\n  storageBucket: \"reactcrudapp007.appspot.com\",\r\n  messagingSenderId: \"1037735974106\",\r\n  appId: \"1:1037735974106:web:3585e5c05831e631b481e3\",\r\n};\r\n// Initialize Firebase\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default firebaseApp;\r\nexport { db };\r\n","import { db } from \"./firebase\";\r\nconst collectionName = \"users\";\r\n\r\n// adding data to firebase\r\nexport const AddData = (data) => db.collection(collectionName).add(data);\r\n\r\n//get realtime updated snapshort\r\nexport const getSnapUpdate = ({ fx_RunOnUpdata }) =>\r\n  db.collection(collectionName).onSnapshot((realTimeData) => fx_RunOnUpdata);\r\n\r\n//getting data form firebase\r\nexport const GetFirebaseData = ({ setUploadedData }) => {\r\n  const array = [];\r\n  let item;\r\n  db.collection(collectionName)\r\n    .get()\r\n    .then((querySnapshot) => {\r\n      querySnapshot.forEach((doc) => {\r\n        // doc.data() is never undefined for query doc snapshots\r\n        item = doc.data();\r\n        item.id = doc.id;\r\n        array.push(item);\r\n      });\r\n      setUploadedData(array);\r\n    });\r\n};\r\n\r\nexport const deleteFirebaseItem = (id) => {\r\n  db.collection(collectionName).doc(id).delete();\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  makeStyles,\r\n  Grid,\r\n  Card,\r\n  CircularProgress,\r\n  CardContent,\r\n  Typography,\r\n  IconButton,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport DeleteForeverOutlinedIcon from \"@material-ui/icons/DeleteForeverOutlined\";\r\nimport ErrorOutlineOutlinedIcon from \"@material-ui/icons/ErrorOutlineOutlined\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport { toast } from \"react-toastify\";\r\nimport { deleteFirebaseItem } from \"../../apiCalls/Firebase/databaseDriver\";\r\nimport { AlertDialog } from \"../commonComponent\";\r\nimport { formStyles } from \"./styles\";\r\n\r\nconst useStyles = makeStyles(formStyles);\r\n\r\nexport default function UploadedData({ users, setFetched }) {\r\n  const classes = useStyles();\r\n  const [currentId, setCurrentId] = useState(\"\");\r\n  //for dialog Purpose\r\n  const [open, setOpen] = useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const DialogContent = () => (\r\n    <Box>\r\n      <Typography align='center' gutterBottom={true}>\r\n        <ErrorOutlineOutlinedIcon\r\n          style={{ fontSize: \"55px\", color: red[500] }}\r\n        />\r\n      </Typography>\r\n      <Typography align='center' variant='h6' component='h5'>\r\n        Are You Sure To Delete ?\r\n      </Typography>\r\n    </Box>\r\n  );\r\n\r\n  //delete firebase item\r\n  const deleteItem = () => {\r\n    deleteFirebaseItem(currentId);\r\n    toast.success(`Deleted Successfully`);\r\n    setOpen(false);\r\n    setFetched(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.uploadDataRoot}>\r\n      <AlertDialog\r\n        initialState={open}\r\n        content={<DialogContent />}\r\n        action={\r\n          <Box mt={2}>\r\n            <Button\r\n              onClick={handleClose}\r\n              variant='outlined'\r\n              color='default'\r\n              style={{ marginRight: \"8px\" }}>\r\n              Cancle\r\n            </Button>\r\n            <Button\r\n              onClick={deleteItem}\r\n              variant='contained'\r\n              color='secondary'\r\n              autoFocus>\r\n              Delete\r\n            </Button>\r\n          </Box>\r\n        }\r\n        handleClose={handleClose}\r\n      />\r\n      <Grid container>\r\n        {users.length === 0 ? (\r\n          <Grid item xs={12}>\r\n            <Typography align='center'>No Data To Show</Typography>\r\n            <Typography align='center' variant='subtitle2' color='error'>\r\n              Plz Add Data Through Form\r\n            </Typography>\r\n          </Grid>\r\n        ) : users.length > 0 ? (\r\n          users.map((item, i) => (\r\n            <Grid item xs={12} key={i}>\r\n              <Card className={classes.cardData}>\r\n                <CardContent>\r\n                  <IconButton\r\n                    color='secondary'\r\n                    className={classes.deletebutton}\r\n                    onClick={() => {\r\n                      handleClickOpen();\r\n                      setCurrentId(item.id);\r\n                    }}>\r\n                    <DeleteForeverOutlinedIcon />\r\n                  </IconButton>\r\n                  <Typography\r\n                    variant='body1'\r\n                    component='h6'>{` ${item.firstName} ${item.lastName}`}</Typography>\r\n                  <Typography variant='body1'>{item.email}</Typography>\r\n                  <Typography variant='body2'>{item.gender}</Typography>\r\n                  <Typography variant='body2'>{item.suggession}</Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))\r\n        ) : (\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              marginTop: \"100px\",\r\n            }}>\r\n            <CircularProgress color='primary' />\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { formStyles } from \"./styles\";\r\nimport { Box, Grid, Paper, Card, CardContent, Button } from \"@material-ui/core\";\r\nimport { renderInputField, renderSelect, renderText } from \"../commonComponent\";\r\nimport UploadedData from \"./uploadedData\";\r\nimport {\r\n  AddData,\r\n  GetFirebaseData,\r\n  getSnapUpdate,\r\n} from \"../../apiCalls/Firebase/databaseDriver\";\r\n\r\nconst useStyles = makeStyles(formStyles);\r\n\r\nexport default function FormComponent() {\r\n  const classes = useStyles();\r\n  const [data, setData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    suggession: \"\",\r\n    gender: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [Fetched, setFetched] = useState(false);\r\n  const [uploadedData, setUploadedData] = useState([]);\r\n\r\n  const handleOnChange = ({ target }) => {\r\n    const name = target.name;\r\n    const value = target.value;\r\n\r\n    //validating errors\r\n    target.value.length < 3\r\n      ? (errors[target.name] = setErrors({\r\n          ...errors,\r\n          [name]: `${name} have atleast 3 letters`,\r\n        }))\r\n      : (errors[target.name] = setErrors({ ...errors, [name]: \"\" }));\r\n\r\n    setData({\r\n      ...data,\r\n      [name]: value,\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //api call to send data\r\n    AddData(data).then((dataSet) => console.log(\"uploaded dataset\", dataSet));\r\n    //reset form field\r\n    setData({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      suggession: \"\",\r\n      gender: \"\",\r\n    });\r\n\r\n    //snap update...\r\n    getSnapUpdate({ fx_RunOnUpdata: setFetched(false) });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!Fetched) {\r\n      GetFirebaseData({ setUploadedData });\r\n      setFetched(true);\r\n    }\r\n  }, [Fetched, uploadedData.length]);\r\n\r\n  return (\r\n    <Grid container className={classes.formContainer}>\r\n      <Grid item xs={12} sm={9}>\r\n        <form onSubmit={handleSubmit}>\r\n          <Paper component={Box} mb={1} p={2}>\r\n            <Box pt={2} mt={1}>\r\n              {renderText({\r\n                type: \"h6\",\r\n                color: \"primary\",\r\n                label: \"Covid 19 FeedBack Form\",\r\n                align: \"center\",\r\n                gutterBottom: true,\r\n              })}\r\n            </Box>\r\n            <Grid container>\r\n              <Grid item xs={12} sm={6}>\r\n                <Card>\r\n                  <CardContent>\r\n                    <Box mt={1} mb={1}>\r\n                      {renderInputField({\r\n                        name: \"firstName\",\r\n                        label: \"First Name\",\r\n                        type: \"text\",\r\n                        data: data,\r\n                        errors: errors,\r\n                        onChange: handleOnChange,\r\n                      })}\r\n                    </Box>\r\n\r\n                    {renderInputField({\r\n                      name: \"lastName\",\r\n                      label: \"Last Name\",\r\n                      type: \"text\",\r\n                      data: data,\r\n                      errors: errors,\r\n                      onChange: handleOnChange,\r\n                    })}\r\n                    <Box mt={1} mb={1}>\r\n                      {renderSelect({\r\n                        name: \"gender\",\r\n                        label: \"Gender\",\r\n                        options: [\r\n                          { key: \"male\", value: \"male\" },\r\n                          { key: \"female\", value: \"female\" },\r\n                          { key: \"other\", value: \"other\" },\r\n                        ],\r\n                        data: data,\r\n                        errors: errors,\r\n                        onChange: handleOnChange,\r\n                      })}\r\n                    </Box>\r\n                    <Box mt={1} mb={1}>\r\n                      {renderInputField({\r\n                        name: \"suggession\",\r\n                        label: \"Suggession\",\r\n                        type: \"text\",\r\n                        data: data,\r\n                        errors: errors,\r\n                        onChange: handleOnChange,\r\n                      })}\r\n                    </Box>\r\n                  </CardContent>\r\n                  <p style={{ textAlign: \"center\", padding: \"0px 16px\" }}>\r\n                    <Button\r\n                      type='submit'\r\n                      color='primary'\r\n                      variant='contained'\r\n                      fullWidth={true}\r\n                      size='small'>\r\n                      Submit\r\n                    </Button>\r\n                  </p>\r\n                </Card>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <UploadedData users={uploadedData} setFetched={setFetched} />\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </form>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport BodyComponent from \"./components/bodyComponent\";\r\nimport Footer from \"./components/Footer\";\r\nimport HeaderComponent from \"./components/headerComponent\";\r\nimport FormComponent from \"./components/FormComponent/form\";\r\nimport NotFoundError from \"./components/404Error\";\r\n\r\nimport { Switch, Route ,Redirect} from \"react-router-dom\";\r\n\r\nexport const MainComponentDisplay = () => (\r\n  <div>\r\n    <HeaderComponent />\r\n    <BodyComponent />\r\n    <Footer />\r\n  </div>\r\n);\r\nexport const FormMainComponent = () => (\r\n  <div>\r\n    <HeaderComponent />\r\n    <FormComponent />\r\n    <Footer />\r\n  </div>\r\n);\r\n\r\nconst Routes = () => (\r\n  <Switch>\r\n    <Route\r\n      exact\r\n      path='/feedback_and_grievance'\r\n      render={() => <FormMainComponent />}\r\n    />\r\n    <Route exact path='/' render={() => <MainComponentDisplay />} />\r\n   \r\n    <Route\r\n      exact\r\n      path='*'\r\n      render={() => (\r\n        <Redirect to=\"/\"/>\r\n      )}\r\n    />\r\n  </Switch>\r\n);\r\n\r\nexport default function App() {\r\n  return <Routes />;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}